// Auto-Generated by Torch2VRC
// There should be no need to modify anything in this file, it will not be included in your VRC world!

using UnityEngine;
using UnityEditor;
using System.IO;


#if UNITY_EDITOR
public class MSR_AddButtons : AssetPostprocessor
{
    const string NETWORK_NAME = "{{NetworkName}}";

    public void OnPreprocessTexture()
    {
        if( !assetPath.Contains("Rami-Pastrami/Torch2VRC/" + NETWORK_NAME) ) { return; } // Don't bother if not in network folder

        // Import Weights / Biases for Connections
        if (assetPath.Contains(NETWORK_NAME + "/Connections"))
        {
            Debug.Log("Importing Connections for " + NETWORK_NAME);
			
			TextureImporterPlatformSettings platformSettings = new TextureImporterPlatformSettings();

            TextureImporter textureImporter = (TextureImporter)assetImporter;
            textureImporter.textureType = TextureImporterType.Default;
            textureImporter.textureShape = TextureImporterShape.Texture2D;
            textureImporter.sRGBTexture = false;
            textureImporter.alphaSource = TextureImporterAlphaSource.FromInput;
            textureImporter.alphaIsTransparency = true;
            textureImporter.wrapMode = TextureWrapMode.Clamp;
            textureImporter.filterMode = FilterMode.Point;

            platformSettings.maxTextureSize = 8192;
            platformSettings.resizeAlgorithm = TextureResizeAlgorithm.Mitchell;
            platformSettings.format = TextureImporterFormat.RGBA32;
            textureImporter.SetPlatformTextureSettings(platformSettings);

        }


    }



    [MenuItem("Rami/Torch2VRC/" + NETWORK_NAME  + "/Placeholder")]
    private static void DoNothingForNow()
    {
        Debug.Log("Test");
    }






}
#endif
